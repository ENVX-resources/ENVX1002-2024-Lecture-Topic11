{
  "hash": "a83d763692d21a5807b13b27ca0c304a",
  "result": {
    "markdown": "---\ntitle: Topic 11 -- Multiple Linear Regression\nsubtitle: ENVX1002 Introduction to Statistical Methods\nauthor: Liana Pozza\ninstitute: The University of Sydney\ndate: last-modified # today | last-modified\ndate-format: \"MMM YYYY\" # see https://momentjs.com/docs/#/displaying/format/\nexecute: \n  eval: true\n  echo: true\nself-contained: false\nembed-resources: true\n---\n\n\n\n\n\n## Module overview\n\n- **Week 9. Describing relationships**\n    + Correlation &rarr; calculation, interpretation, things to watch out for\n    + Regression &rarr; Why do we care? model structure, model fitting\n  \n- **Week 10. Linear functions**\n    + Is the model worth fitting? &rarr; Assumptions, hypothesis testing\n    + How good is the model? &rarr; Measures of model fit\n  \n- **Week 11. Linear functions - multiple predictors** \n    + Parsimonious models\n    + Introduction to Multiple Linear Regression (MLR) modelling\n    + Assumptions and interpretation\n\n- **Week 12. Nonlinear functions**\n    + Common nonlinear functions\n    + Transformations\n    + Performing nonlinear regression\n\n\n## Module overview\n  \n- **Week 11. Linear functions - multiple predictors** \n    + Parsimonious models\n    + Introduction to Multiple Linear Regression (MLR) modelling\n    + Assumptions and interpretation\n\n\n\n\n\n\n# Recap\n\n## Simple linear regression\n\n$$ Y_i = \\beta_0 + \\beta_1 x_i + \\epsilon_i $$\n\n  Ideal for predicting a continuous response variable from a single predictor variable: *\"How does $y$ change as $x$ changes?\"*\n\n. . .\n\n### What if we have more than one predictor?\n\nWhat is the model and how do we interpret the results?\n\n\n# Multiple linear regression\n\n![Galton](images/galton.jpg)\n![Pearson](images/pearson.jpg)\n\n*Francis Galton and Karl Pearson*\n\n## History\n\n- First raised by **Francis Galton** in 1886, after studying genetic variations in sweet peas over several generations.\n- **Karl Pearson** developed the mathematical formalism for the multiple linear regression model in the early 1900s.\n\n> *“The somewhat complicated mathematics of multiple correlation, with its repeated appeals to the geometrical notions of hyperspace, remained a closed chamber to him.”*\n\n-- Pearson (1930), on Galton's work with MLR\n\n# Air Quality in New York (1973)\n\n\n## Air quality {auto-animate=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(airquality)\ndplyr::glimpse(airquality)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 153\nColumns: 6\n$ Ozone   <int> 41, 36, 12, 18, NA, 28, 23, 19, 8, NA, 7, 16, 11, 14, 18, 14, …\n$ Solar.R <int> 190, 118, 149, 313, NA, NA, 299, 99, 19, 194, NA, 256, 290, 27…\n$ Wind    <dbl> 7.4, 8.0, 12.6, 11.5, 14.3, 14.9, 8.6, 13.8, 20.1, 8.6, 6.9, 9…\n$ Temp    <int> 67, 72, 74, 62, 56, 66, 65, 59, 61, 69, 74, 69, 66, 68, 58, 64…\n$ Month   <int> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Day     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,…\n```\n:::\n:::\n\n\n## {auto-animate=\"true\"}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 153\nColumns: 6\n$ Ozone   <int> 41, 36, 12, 18, NA, 28, 23, 19, 8, NA, 7, 16, 11, 14, 18, 14, …\n$ Solar.R <int> 190, 118, 149, 313, NA, NA, 299, 99, 19, 194, NA, 256, 290, 27…\n$ Wind    <dbl> 7.4, 8.0, 12.6, 11.5, 14.3, 14.9, 8.6, 13.8, 20.1, 8.6, 6.9, 9…\n$ Temp    <int> 67, 72, 74, 62, 56, 66, 65, 59, 61, 69, 74, 69, 66, 68, 58, 64…\n$ Month   <int> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Day     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,…\n```\n:::\n:::\n\n\n. . .\n\nOzone: harmful air pollutant when present at ground level; main component of smog:\n\n- `Ozone`: ozone concentration (ppb)\n- `Solar.R`: solar radiation (lang)\n- `Wind`: wind speed (mph)\n- `Temp`: ambient temperature (degrees F)\n- `Month`: month (1-12)\n- `Day`: day of the month (1-31)\n\n## Correlations\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(airquality)\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n## `corrplot`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(corrplot)\ncorrplot::corrplot(cor(airquality, use = \"complete.obs\"), method = \"circle\")\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n## `psych`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npsych::pairs.panels(airquality)\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## The simplest model {auto-animate=\"true\"} \n\nPick the predictor that has the highest correlation coefficient with the response variable.\n\n:::{.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(airquality, use = \"complete.obs\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Ozone     Solar.R        Wind       Temp        Month\nOzone    1.000000000  0.34834169 -0.61249658  0.6985414  0.142885168\nSolar.R  0.348341693  1.00000000 -0.12718345  0.2940876 -0.074066683\nWind    -0.612496576 -0.12718345  1.00000000 -0.4971897 -0.194495804\nTemp     0.698541410  0.29408764 -0.49718972  1.0000000  0.403971709\nMonth    0.142885168 -0.07406668 -0.19449580  0.4039717  1.000000000\nDay     -0.005189769 -0.05775380  0.04987102 -0.0965458 -0.009001079\n                 Day\nOzone   -0.005189769\nSolar.R -0.057753801\nWind     0.049871017\nTemp    -0.096545800\nMonth   -0.009001079\nDay      1.000000000\n```\n:::\n:::\n\n:::\n\n:::{.fragment}\nWhat can we understand about the relationship between `Ozone` and `Temp` ($r$ = 0.7)?\n:::\n\n## Relationship {auto-animate=\"true\"} \nWhat can we understand about the relationship between `Ozone` and `Temp` ($r$ = 0.7)?\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = airquality, aes(x = Temp, y = Ozone)) +\n  geom_point() +\n  labs(x = expression(\"Temperature \" ( degree~F)), y = \"Ozone (ppb)\")\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## Relationship\nWhat can we understand about the relationship between `Ozone` and `Temp` ($r$ = 0.7)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = airquality, aes(x = Temp, y = Ozone)) +\n  geom_point() + geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = expression(\"Temperature \" ( degree~F)), y = \"Ozone (ppb)\")\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Fitting the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- lm(formula = Ozone ~ Temp, data = airquality)\n```\n:::\n\n\n## Assumptions\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # set up a 2 x 2 grid for plots\nplot(fit)\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n## `ggfortify`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggfortify)\nautoplot(fit)\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Interpretation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Ozone ~ Temp, data = airquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.729 -17.409  -0.587  11.306 118.271 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -146.9955    18.2872  -8.038 9.37e-13 ***\nTemp           2.4287     0.2331  10.418  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 23.71 on 114 degrees of freedom\n  (37 observations deleted due to missingness)\nMultiple R-squared:  0.4877,\tAdjusted R-squared:  0.4832 \nF-statistic: 108.5 on 1 and 114 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n- `Temp` is a statistically significant predictor of `Ozone` (p < .001).\n- The (simple linear) model explains 49% of variance (r^2^ = 0.49).\n\n. . .\n\n**Can we improve the model in other ways?**\n\n# Multiple linear regression\n\n## Important concepts\n\n- The \"best\" model is the one that best describes the relationship between the response and the predictors. \n  - **NOT** the model that includes all possible predictors ([data dredging](https://en.wikipedia.org/wiki/Data_dredging)).\n\n. . .\n\n### Principle of parsimony\nA good model:\n\n- Has only *useful* predictors.\n- Has no *redundant* predictors (principle of orthogonality).\n- Is *interpretable* (principle of transparency) or *predicts well* (principle of accuracy).\n\n\n## The MLR model {auto-animate=\"true\"}\n\nAn extension of simple linear regression to include **more than one** predictor variable: *\"How does $y$ change as $x_1$, $x_2$, ..., $x_k$ change?\"*\n\n$$ Y_i = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + ... + \\beta_k x_k + \\epsilon_i $$\n\n:::{.fragment}\nTherefore, estimating the model involves *estimating the values of* $\\beta_0$, $\\beta_1$, $\\beta_2$, ..., $\\beta_k$.\n\n- $\\beta_0$ is the intercept\n- $\\beta_1$ to $\\beta_k$ are the partial regression coefficients\n- $\\epsilon$ is the error term\n:::\n\n\n## Explore\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(airquality)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 153\nColumns: 6\n$ Ozone   <int> 41, 36, 12, 18, NA, 28, 23, 19, 8, NA, 7, 16, 11, 14, 18, 14, …\n$ Solar.R <int> 190, 118, 149, 313, NA, NA, 299, 99, 19, 194, NA, 256, 290, 27…\n$ Wind    <dbl> 7.4, 8.0, 12.6, 11.5, 14.3, 14.9, 8.6, 13.8, 20.1, 8.6, 6.9, 9…\n$ Temp    <int> 67, 72, 74, 62, 56, 66, 65, 59, 61, 69, 74, 69, 66, 68, 58, 64…\n$ Month   <int> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Day     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,…\n```\n:::\n:::\n\n\n<br>\n\n:::{.fragment}\n### The \"best\" model\n\nThe variables `Month` and `Day` are not useful predictors, so we will exclude them from the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_multi <- lm(formula = Ozone ~ Solar.R + Wind + Temp, data = airquality)\n```\n:::\n\n:::\n\n## Visualisation: not easy\n\nAre the plots useful?\n\n### 3D plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\nplot_ly(data = airquality, \n  x = ~Temp, y = ~Ozone, z = ~Solar.R,\n  type = \"scatter3d\", mode = \"markers\", opacity = 0.5)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-c61595c9dba23aab23ec\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c61595c9dba23aab23ec\">{\"x\":{\"visdat\":{\"2bb3b743cdc\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"2bb3b743cdc\",\"attrs\":{\"2bb3b743cdc\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"opacity\":0.5,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"Temp\"},\"yaxis\":{\"title\":\"Ozone\"},\"zaxis\":{\"title\":\"Solar.R\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[67,72,74,62,65,59,61,69,66,68,58,64,66,57,68,62,59,73,61,61,67,81,79,76,82,90,87,82,77,72,65,73,76,84,85,81,83,83,88,92,92,89,73,81,80,81,82,84,87,85,74,86,85,82,86,88,86,83,81,81,81,82,89,90,90,86,82,80,77,79,76,78,78,77,72,79,81,86,97,94,96,94,91,92,93,93,87,84,80,78,75,73,81,76,77,71,71,78,67,76,68,82,64,71,81,69,63,70,75,76,68],\"y\":[41,36,12,18,23,19,8,16,11,14,18,14,34,6,30,11,1,11,4,32,23,45,115,37,29,71,39,23,21,37,20,12,13,135,49,32,64,40,77,97,97,85,10,27,7,48,35,61,79,63,16,80,108,20,52,82,50,64,59,39,9,16,122,89,110,44,28,65,22,59,23,31,44,21,9,45,168,73,76,118,84,85,96,78,73,91,47,32,20,23,21,24,44,21,28,9,13,46,18,13,24,16,13,23,36,7,14,30,14,18,20],\"z\":[190,118,149,313,299,99,19,256,290,274,65,334,307,78,322,44,8,320,25,92,13,252,223,279,127,291,323,148,191,284,37,120,137,269,248,236,175,314,276,267,272,175,264,175,48,260,274,285,187,220,7,294,223,81,82,213,275,253,254,83,24,77,255,229,207,192,273,157,71,51,115,244,190,259,36,212,238,215,203,225,237,188,167,197,183,189,95,92,252,220,230,259,236,259,238,24,112,237,224,27,238,201,238,14,139,49,20,193,191,131,223],\"mode\":\"markers\",\"opacity\":0.5,\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Visualisation: not easy\n\nAre the plots useful?\n\n### 4D plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\nplot_ly(data = airquality, \n  x = ~Temp, y = ~Ozone, z = ~Solar.R, color = ~Wind,\n  type = \"scatter3d\", mode = \"markers\", opacity = 0.5)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-dff0b82e08e32054bef8\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-dff0b82e08e32054bef8\">{\"x\":{\"visdat\":{\"2bb33fa0d653\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"2bb33fa0d653\",\"attrs\":{\"2bb33fa0d653\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"opacity\":0.5,\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"Temp\"},\"yaxis\":{\"title\":\"Ozone\"},\"zaxis\":{\"title\":\"Solar.R\"}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[67,72,74,62,65,59,61,69,66,68,58,64,66,57,68,62,59,73,61,61,67,81,79,76,82,90,87,82,77,72,65,73,76,84,85,81,83,83,88,92,92,89,73,81,80,81,82,84,87,85,74,86,85,82,86,88,86,83,81,81,81,82,89,90,90,86,82,80,77,79,76,78,78,77,72,79,81,86,97,94,96,94,91,92,93,93,87,84,80,78,75,73,81,76,77,71,71,78,67,76,68,82,64,71,81,69,63,70,75,76,68],\"y\":[41,36,12,18,23,19,8,16,11,14,18,14,34,6,30,11,1,11,4,32,23,45,115,37,29,71,39,23,21,37,20,12,13,135,49,32,64,40,77,97,97,85,10,27,7,48,35,61,79,63,16,80,108,20,52,82,50,64,59,39,9,16,122,89,110,44,28,65,22,59,23,31,44,21,9,45,168,73,76,118,84,85,96,78,73,91,47,32,20,23,21,24,44,21,28,9,13,46,18,13,24,16,13,23,36,7,14,30,14,18,20],\"z\":[190,118,149,313,299,99,19,256,290,274,65,334,307,78,322,44,8,320,25,92,13,252,223,279,127,291,323,148,191,284,37,120,137,269,248,236,175,314,276,267,272,175,264,175,48,260,274,285,187,220,7,294,223,81,82,213,275,253,254,83,24,77,255,229,207,192,273,157,71,51,115,244,190,259,36,212,238,215,203,225,237,188,167,197,183,189,95,92,252,220,230,259,236,259,238,24,112,237,224,27,238,201,238,14,139,49,20,193,191,131,223],\"mode\":\"markers\",\"opacity\":0.5,\"type\":\"scatter3d\",\"marker\":{\"colorbar\":{\"title\":\"Wind\",\"ticklen\":2},\"cmin\":2.2999999999999998,\"cmax\":20.699999999999999,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[7.4000000000000004,8,12.6,11.5,8.5999999999999996,13.800000000000001,20.100000000000001,9.6999999999999993,9.1999999999999993,10.9,13.199999999999999,11.5,12,18.399999999999999,11.5,9.6999999999999993,9.6999999999999993,16.600000000000001,9.6999999999999993,12,12,14.9,5.7000000000000002,7.4000000000000004,9.6999999999999993,13.800000000000001,11.5,8,14.9,20.699999999999999,9.1999999999999993,11.5,10.300000000000001,4.0999999999999996,9.1999999999999993,9.1999999999999993,4.5999999999999996,10.9,5.0999999999999996,6.2999999999999998,5.7000000000000002,7.4000000000000004,14.300000000000001,14.9,14.300000000000001,6.9000000000000004,10.300000000000001,6.2999999999999998,5.0999999999999996,11.5,6.9000000000000004,8.5999999999999996,8,8.5999999999999996,12,7.4000000000000004,7.4000000000000004,7.4000000000000004,9.1999999999999993,6.9000000000000004,13.800000000000001,7.4000000000000004,4,10.300000000000001,8,11.5,11.5,9.6999999999999993,10.300000000000001,6.2999999999999998,7.4000000000000004,10.9,10.300000000000001,15.5,14.300000000000001,9.6999999999999993,3.3999999999999999,8,9.6999999999999993,2.2999999999999998,6.2999999999999998,6.2999999999999998,6.9000000000000004,5.0999999999999996,2.7999999999999998,4.5999999999999996,7.4000000000000004,15.5,10.9,10.300000000000001,10.9,9.6999999999999993,14.9,15.5,6.2999999999999998,10.9,11.5,6.9000000000000004,13.800000000000001,10.300000000000001,10.300000000000001,8,12.6,9.1999999999999993,10.300000000000001,10.300000000000001,16.600000000000001,6.9000000000000004,14.300000000000001,8,11.5],\"line\":{\"colorbar\":{\"title\":\"\",\"ticklen\":2},\"cmin\":2.2999999999999998,\"cmax\":20.699999999999999,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[7.4000000000000004,8,12.6,11.5,8.5999999999999996,13.800000000000001,20.100000000000001,9.6999999999999993,9.1999999999999993,10.9,13.199999999999999,11.5,12,18.399999999999999,11.5,9.6999999999999993,9.6999999999999993,16.600000000000001,9.6999999999999993,12,12,14.9,5.7000000000000002,7.4000000000000004,9.6999999999999993,13.800000000000001,11.5,8,14.9,20.699999999999999,9.1999999999999993,11.5,10.300000000000001,4.0999999999999996,9.1999999999999993,9.1999999999999993,4.5999999999999996,10.9,5.0999999999999996,6.2999999999999998,5.7000000000000002,7.4000000000000004,14.300000000000001,14.9,14.300000000000001,6.9000000000000004,10.300000000000001,6.2999999999999998,5.0999999999999996,11.5,6.9000000000000004,8.5999999999999996,8,8.5999999999999996,12,7.4000000000000004,7.4000000000000004,7.4000000000000004,9.1999999999999993,6.9000000000000004,13.800000000000001,7.4000000000000004,4,10.300000000000001,8,11.5,11.5,9.6999999999999993,10.300000000000001,6.2999999999999998,7.4000000000000004,10.9,10.300000000000001,15.5,14.300000000000001,9.6999999999999993,3.3999999999999999,8,9.6999999999999993,2.2999999999999998,6.2999999999999998,6.2999999999999998,6.9000000000000004,5.0999999999999996,2.7999999999999998,4.5999999999999996,7.4000000000000004,15.5,10.9,10.300000000000001,10.9,9.6999999999999993,14.9,15.5,6.2999999999999998,10.9,11.5,6.9000000000000004,13.800000000000001,10.300000000000001,10.300000000000001,8,12.6,9.1999999999999993,10.300000000000001,10.300000000000001,16.600000000000001,6.9000000000000004,14.300000000000001,8,11.5]}},\"frame\":null},{\"x\":[57,97],\"y\":[1,168],\"type\":\"scatter3d\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"none\",\"showlegend\":false,\"marker\":{\"colorbar\":{\"title\":\"Wind\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"cmin\":2.2999999999999998,\"cmax\":20.699999999999999,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"color\":[2.2999999999999998,20.699999999999999],\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"z\":[7,334],\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n## Partial regression coefficients {auto-animate=\"true\"}\n\nGiven the multiple linear model:\n$$ Y_i = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + ... + \\beta_k x_k + \\epsilon_i $$\n\n\nThe partial regression coefficient for a predictor $x_i$ is the amount by which the response variable $Y$ changes when $x_k$ is increased by one unit, **while all other predictors are held constant**.\n\n$$ \\beta_k = \\frac{\\Delta Y}{\\Delta x_k} $$\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nequatiomatic::extract_eq(fit_multi)\n```\n\n::: {.cell-output-display}\n$$\n\\operatorname{Ozone} = \\alpha + \\beta_{1}(\\operatorname{Solar.R}) + \\beta_{2}(\\operatorname{Wind}) + \\beta_{3}(\\operatorname{Temp}) + \\epsilon\n$$\n:::\n:::\n\n\n> *With `Wind` and `Solar.R` held constant, how does `Temp` affect `Ozone`?*\n\n## Partial regression coefficients: visualisation {auto-animate=\"true\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsjPlot::plot_model(fit_multi,\n  type = \"pred\", \n  terms = c(\"Temp\", \"Solar.R\", \"Wind\"), \n  ci.lvl = NA)\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n> *With `Wind` and `Solar.R` held constant, how does `Temp` affect `Ozone`?*\n\n## Interpreting the partial regression coefficients\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_multi\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Ozone ~ Solar.R + Wind + Temp, data = airquality)\n\nCoefficients:\n(Intercept)      Solar.R         Wind         Temp  \n  -64.34208      0.05982     -3.33359      1.65209  \n```\n:::\n:::\n\n\n\n:::{.fragment}\nHolding **all** other variables constant:\n\n- For every 1 unit increase in `Solar.R`, `Ozone` increases by a mean value of 0.06 ppb.\n- For every 1 degree increase in `Temp`, `Ozone` increases by a mean value of 1.65 ppb.\n- For every 1 unit increase in `Wind`, `Ozone` decreases by a mean value of 3.33 ppb.\n:::\n\n:::{.fragment}\n:::{.callout-caution}\nIf the model is not \"valid\", then the partial regression coefficients are not meaningful.\n:::\n:::\n\n# Assumptions\n\n## LINE\n\nAs with Simple Linear Regression, we need to check the assumptions of the model (LINE):\n\n- **L**inearity: the relationships between the response and the predictors are all linear.\n- **I**ndependence: the observations are independent of each other.\n- **N**ormality: the residuals are normally distributed.\n- **E**qual variance: the variance of the residuals is constant.\n\n## Recall\n\nIn SLR, the model is made up of the [**deterministic**]{style=\"color:seagreen\"} component (the line) and the [***random***]{style=\"color:firebrick\"}  component (the error term).\n\n$$ Y_i = \\color{seagreen}{\\beta_0 + \\beta_1 x_i} + \\color{firebrick}\\epsilon_i $$\n\n. . .\n\n**This is the same for MLR:**\n$$ Y_i = \\color{seagreen}{\\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + ... + \\beta_k x_k} + \\color{firebrick}{\\epsilon_i} $$\n\nSince *only* the error term is random, the assumptions are *still* about the error term, $\\hat\\epsilon$, which is simple to assess!\n\n## Assumptions of MLR\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # set up a 2 x 2 grid for plots\nplot(fit_multi)\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n## Transformation using `log()`\n\nSome evidence of nonlinearity in the diagnostic plots. Transform and re-check assumptions.\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_multi_log <- lm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\npar(mfrow = c(2, 2)) # set up a 2 x 2 grid for plots\nplot(fit_multi_log)\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n## Results \n:::: {.columns}\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit_multi_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.06193 -0.29970 -0.00231  0.30756  1.23578 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,\tAdjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n:::\n::: {.column width=\"50%\"}\n:::\n::::\n\n- All three predictors are statistically significant (p < .001).\n- The model explains 66% of variance (r^2^ = 0.66).\n\n## Results compared to SLR\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit_multi_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.06193 -0.29970 -0.00231  0.30756  1.23578 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,\tAdjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n:::\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Ozone ~ Temp, data = airquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.729 -17.409  -0.587  11.306 118.271 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -146.9955    18.2872  -8.038 9.37e-13 ***\nTemp           2.4287     0.2331  10.418  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 23.71 on 114 degrees of freedom\n  (37 observations deleted due to missingness)\nMultiple R-squared:  0.4877,\tAdjusted R-squared:  0.4832 \nF-statistic: 108.5 on 1 and 114 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n:::\n::::\n\n- All three predictors are statistically significant (p < .001).\n- The model explains 66% of variance (r^2^ = 0.66 vs. 0.48 in SLR). \n\n# Interpretation\n\n## Coefficients\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8-13\"}\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.06193 -0.29970 -0.00231  0.30756  1.23578 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,    Adjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n\n\nAll three predictors are statistically significant (p < .001).\n\n- For every 1 unit increase in `Solar.R`, `log(Ozone)` increases by a mean value of 0.0025 ppb, holding all other variables constant.\n- For every 1 unit increase in `Wind`, `log(Ozone)` decreases by a mean value of 0.062 ppb, holding all other variables constant.\n- For every 1 degree increase in `Temp`, `log(Ozone)` increases by a mean value of 0.049 ppb, holding all other variables constant.\n\n\n## Residual standard error\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"17-17\"}\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.06193 -0.29970 -0.00231  0.30756  1.23578 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,    Adjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n\n\n::: {.fragment .fade-out}\nOn average, the model predicts `log(Ozone)` within 0.51 ppb of the true value. *Not bad?*\n:::\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp(0.51)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.665291\n```\n:::\n:::\n\n\n- On average, the model predicts `Ozone` within 1.6652912 ppb of the true value.\n- Number of observations = degrees of freedom (107) + number of parameters in the model (4) = 111.\n\n## R-squared\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"19-19\"}\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.06193 -0.29970 -0.00231  0.30756  1.23578 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,    Adjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n\n\nIf there are >1 predictors, use the **Adjusted R-Squared** as it penalises the model for having more predictors that are not useful.\n\n## F-stat\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"20-20\"}\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.06193 -0.29970 -0.00231  0.30756  1.23578 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,    Adjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n\n\n- The F-statistic tests the null hypothesis that all the regression coefficients are equal to zero, i.e. $H_0: \\beta_1 = \\beta_2 = ... = \\beta_k = 0$.\n- As a ratio, it tells us how much better the model is than the null model (i.e. a model with no predictors).\n- If the p-value is less than our specified critical value (e.g. 0.05), we reject the null hypothesis and conclude that the current model is better than the null model.\n\n## Reporting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCall:\nlm(formula = log(Ozone) ~ Solar.R + Wind + Temp, data = airquality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.06193 -0.29970 -0.00231  0.30756  1.23578 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.2621323  0.5535669  -0.474 0.636798    \nSolar.R      0.0025152  0.0005567   4.518 1.62e-05 ***\nWind        -0.0615625  0.0157130  -3.918 0.000158 ***\nTemp         0.0491711  0.0060875   8.077 1.07e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5086 on 107 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.6644,    Adjusted R-squared:  0.655 \nF-statistic: 70.62 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n\n\nSolar radiation, wind speed and temperature are **significant predictors** of Ozone concentration (**p < 0.001**) with the model accounting for **66% of the variation** in weight.\n\n\n# Abalone: full example\n\n\n\n## Data\n\nData from the [UCI Machine Learning Repository](https://archive.ics.uci.edu/ml/datasets/abalone).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabalone <- read_csv(\"data/abalone.csv\")\nglimpse(abalone)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 4,177\nColumns: 9\n$ sex      <chr> \"M\", \"M\", \"F\", \"M\", \"I\", \"I\", \"F\", \"F\", \"M\", \"F\", \"F\", \"M\", \"…\n$ length   <dbl> 0.455, 0.350, 0.530, 0.440, 0.330, 0.425, 0.530, 0.545, 0.475…\n$ diameter <dbl> 0.365, 0.265, 0.420, 0.365, 0.255, 0.300, 0.415, 0.425, 0.370…\n$ height   <dbl> 0.095, 0.090, 0.135, 0.125, 0.080, 0.095, 0.150, 0.125, 0.125…\n$ whole    <dbl> 0.5140, 0.2255, 0.6770, 0.5160, 0.2050, 0.3515, 0.7775, 0.768…\n$ shucked  <dbl> 0.2245, 0.0995, 0.2565, 0.2155, 0.0895, 0.1410, 0.2370, 0.294…\n$ viscera  <dbl> 0.1010, 0.0485, 0.1415, 0.1140, 0.0395, 0.0775, 0.1415, 0.149…\n$ shell    <dbl> 0.150, 0.070, 0.210, 0.155, 0.055, 0.120, 0.330, 0.260, 0.165…\n$ rings    <dbl> 15, 7, 9, 10, 7, 8, 20, 16, 9, 19, 14, 10, 11, 10, 10, 12, 7,…\n```\n:::\n:::\n\n\n## Preview\n\n\n::: {.cell}\n\n```{.r .cell-code}\npsych::pairs.panels(abalone)\n```\n\n::: {.cell-output-display}\n![](envx1002-w11-lecture_files/figure-revealjs/unnamed-chunk-32-1.png){width=100% height=700px}\n:::\n:::\n\n\n# Live coding session\n\nData import → EDA → Model fitting → Diagnostics → Transform/Select → Interpret\n\n*Let's fit a model to predict the whole weight of abalone from other measured variables -- I will now switch to RStudio.*\n\n# And we're back!\n\nA quick recap on sub-sampling the dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1113)\nabalone <- \n  abalone %>%\n  select(-sex) %>%\n  sample_n(100)\n```\n:::\n\n\n## What we did\n\n- Fitted a model to predict the whole weight of abalone from other measured variables.\n- Performed a transformation of the response variable to improve model fit.\n- Checked the assumptions of the model.\n- Interpreted the model coefficients.\n- Interpreted the model fit.\n\n\n# Model complexity: overfitting\n> Why can't we just use ALL the predictors?\n\n## The problem with using too many predictors\n\n- The more predictors you add, the better the model fits the data.\n- However, the model may not be able to **generalise** to new data: **overfitting**.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# abalone <-\n#   abalone %>%\n#   select(-sex)\n\nlibrary(broom)\n\nfull7 <- lm(sqrt(whole) ~ ., data = abalone)\npart6 <- update(full7, . ~ . - diameter)\npart5 <- update(part6, . ~ . - viscera)\npart4 <- update(part5, . ~ . - rings)\npart3 <- update(part4, . ~ . - length)\npart2 <- update(part3, . ~ . - height)\npart1 <- update(part2, . ~ . - shell)\n\nformulas <- c(part1$call$formula, \n              part2$call$formula, \n              part3$call$formula, \n              part4$call$formula, \n              part5$call$formula, \n              part6$call$formula, \n              full7$call$formula)\n\nrs <- bind_rows(glance(part1),\n                glance(part2),\n                glance(part3),\n                glance(part4),\n                glance(part5),\n                glance(part6),\n                glance(full7)) %>%\n  mutate(Model = formulas) %>%\n  select(Model, r.squared, adj.r.squared) %>%\n  mutate_if(is.numeric, round, 3)\n\nknitr::kable(rs)\n```\n\n::: {.cell-output-display}\n|Model                                                             | r.squared| adj.r.squared|\n|:-----------------------------------------------------------------|---------:|-------------:|\n|sqrt(whole) ~ shucked                                             |     0.892|         0.891|\n|sqrt(whole) ~ shucked + shell                                     |     0.952|         0.951|\n|sqrt(whole) ~ height + shucked + shell                            |     0.963|         0.962|\n|sqrt(whole) ~ length + height + shucked + shell                   |     0.982|         0.981|\n|sqrt(whole) ~ length + height + shucked + shell + rings           |     0.982|         0.981|\n|sqrt(whole) ~ length + height + shucked + viscera + shell + rings |     0.982|         0.981|\n|sqrt(whole) ~ .                                                   |     0.982|         0.981|\n:::\n:::\n\n\n## The r^2^ value\n\nThe R-squared value is the proportion of variance explained by the model.\n\n$$ r^2 = \\frac{SS_{reg}}{SS_{tot}} = 1 - \\frac{SS_{res}}{SS_{tot}} $$\n\nThe adjusted R-squared value is the proportion of variance explained by the model, adjusted for the number of predictors.\n\n$$ r^2_{adj} = 1 - \\frac{SS_{res}}{SS_{tot}} \\frac{n-1}{n-p-1} $$\n\nwhere $n$ is the number of observations and $p$ is the number of predictors.\n\n\n\n\n## Full model vs reduced model\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n::: {.cell height='500px'}\n\n```{.r .cell-code}\nfull <- lm(sqrt(whole) ~ ., data = abalone)\nsummary(full)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = sqrt(whole) ~ ., data = abalone)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.218383 -0.016249  0.000771  0.020543  0.105263 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.027849   0.036151  -0.770 0.443065    \nlength       0.959033   0.296239   3.237 0.001678 ** \ndiameter    -0.024686   0.377611  -0.065 0.948019    \nheight       0.969022   0.265067   3.656 0.000427 ***\nshucked      0.317776   0.055354   5.741 1.20e-07 ***\nviscera      0.107616   0.104461   1.030 0.305614    \nshell        0.433048   0.095434   4.538 1.72e-05 ***\nrings        0.001984   0.001800   1.103 0.273097    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03903 on 92 degrees of freedom\nMultiple R-squared:  0.9824,\tAdjusted R-squared:  0.9811 \nF-statistic: 735.2 on 7 and 92 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n:::\n:::{.column width=\"50%\"}\n\n::: {.cell height='300px'}\n\n```{.r .cell-code}\nreduced <- lm(sqrt(whole) ~ shell + height + diameter, data = abalone)\nsummary(reduced)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = sqrt(whole) ~ shell + height + diameter, data = abalone)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.149252 -0.030922 -0.004514  0.023821  0.160182 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.13051    0.03854  -3.386 0.001028 ** \nshell        0.56407    0.09945   5.672 1.49e-07 ***\nheight       1.33325    0.34613   3.852 0.000212 ***\ndiameter     1.62282    0.14862  10.919  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.05209 on 96 degrees of freedom\nMultiple R-squared:  0.9674,\tAdjusted R-squared:  0.9663 \nF-statistic: 948.5 on 3 and 96 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n:::\n::::\n\n<br>\n\n- Is the 0.015 improvement in the adjusted R-squared -- *an extra 1.5% of the variance explained* -- worth the extra predictors? \n- Recall: **principle of parsimony** - the simplest model that explains the data is the best.\n- But how do we know which predictors to keep?\n\n## Model selection\n\n- Covered in **second year (ENVX2001)**.\n- Using techniques of **stepwise regression**, we can select the best model from a set of \"candidate\" models.\n- If we have non-significant predictors, we can consider the effect of removing them from the model (**partial F-test**).\n- Aim is to achieve the best balance between **model fit** and **model complexity**.\n\n## Summary\n\n- MLR is an extension of SLR to include more than one predictor.\n  - Instead of a line, we are fitting a \"hyperplane\" i.e. multiple dimensions.\n  - However, the principles are the same: we are still trying to minimise the sum of squared residuals.\n  - Assumptions of MLR are the same as SLR.\n  - Instead of the multiple R-squared value, we use the adjusted R-squared value to assess model fit.\n\n. . .\n\n- Follow the rules of parsimony: the simplest model that explains the data is the best, given similar model fit.\n  - Consider the effect of removing non-significant predictors from the model.\n\n\n\n# Thanks!\n\nThis presentation is based on the [SOLES Quarto reveal.js template](https://github.com/usyd-soles-edu/soles-revealjs) and is licensed under a [Creative Commons Attribution 4.0 International License][cc-by].\n\n\n<!-- Links -->\n[cc-by]: http://creativecommons.org/licenses/by/4.0/",
    "supporting": [
      "envx1002-w11-lecture_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"envx1002-w11-lecture_files/libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"envx1002-w11-lecture_files/libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"envx1002-w11-lecture_files/libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"envx1002-w11-lecture_files/libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"envx1002-w11-lecture_files/libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"envx1002-w11-lecture_files/libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"envx1002-w11-lecture_files/libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"envx1002-w11-lecture_files/libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"envx1002-w11-lecture_files/libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}